start =
    sexpression

sexpression =
    cleanquote
    / cleanatom
    / cleanlist

anychar = .

validchar =
    [0-9a-zA-Z_?!+\-=@#$%^&*/.]

cleanatom =
    whitespace* a:atom comment whitespace* { return a; }
    / whitespace* a:atom whitespace* { return a; }

comment =
    whitespace* ";;" comment:(!newline anychar)* { return comment; }

atom =
    number
    / symbol

symbol =
    chars:validchar+ { return chars.join(""); }

number =
    decimal
    / integer

integer
    = digits:[0-9]+ { return parseInt(digits.join(""), 10); }

decimal
    = i:[0-9]*d:[.0-9]+ { return parseFloat(i.join("") + d.join("")); }

quotechar = "`"
quote =
    quotechar a:cleanatom { return a; }
    / quotechar list:cleanlist
      { return ["quote", list]; }

cleanquote =
    whitespace* q:quote comment whitespace* { return q; }
    / whitespace* q:quote whitespace* { return q; }

list =
    leftparen first:sexpression rest:sexpression* rightparen
      { return [first].concat(rest); }

cleanlist =
    whitespace* l:list comment whitespace* { return l; }
    / whitespace* l:list whitespace* { return l; }

whitespace =
    " "
   /"\t"
   / newline

newline = 
    "\n"
    / "\r\n"

leftparen = 
    "(" whitespace*

rightparen =
    whitespace* ")"


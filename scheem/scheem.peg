start =
    expression

expression =
    cleanatom

anychar = .

validchar =
    [0-9a-zA-Z_?!+\-=@#$%^&*/.]

cleanatom =
    whitespace* a:atom comment whitespace* { return a; }
    / whitespace* a:atom whitespace* { return a; }


comment =
    whitespace* ";;" comment:(!newline anychar)* { return comment; }

cleanparenthisedexpression = .
    
atom =
    chars:validchar+
      { return chars.join(""); }

spaceatom =
    whitespace* a:atom { return a; }
    / atom

whitespace =
    " "
   /"\t"
   / newline

newline = 
    "\n"
    / "\r\n"

spaceexpression =
    whitespace+ exp:expression { return exp; }

leftparen =
    "(" whitespace*

rightparen =
    whitespace* ")"

parenthisedexpr =
    leftparen first:atom rest:spaceexpression* rightparen
      { return [first].concat(rest); }
    / "`" leftparen first:atom rest:spaceexpression* rightparen
      { return ["quote", [first].concat(rest)]; }

spaceparenthisedexpr =
    whitespace* p:parenthisedexpr whitespace*
      { return p; }
    / parenthisedexpr

